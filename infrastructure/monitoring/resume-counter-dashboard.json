{
  "widgets": [
    {
      "height": 6,
      "width": 12,
      "y": 33,
      "x": 12,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "Lambda Concurrent Executions",
        "metrics": [
          [
            "AWS/Lambda",
            "ConcurrentExecutions",
            "FunctionName",
            "resume-visitor-counter"
          ]
        ],
        "stat": "Maximum",
        "period": 300
      }
    },
    {
      "height": 2,
      "width": 24,
      "y": 25,
      "x": 0,
      "type": "text",
      "properties": {
        "markdown": "## ‚öôÔ∏è Lambda ‚Äì Backend Logic Monitoring",
        "background": "transparent"
      }
    },
    {
      "height": 6,
      "width": 12,
      "y": 27,
      "x": 0,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "Lambda Invocations & Errors",
        "metrics": [
          [
            "AWS/Lambda",
            "Invocations",
            "FunctionName",
            "resume-visitor-counter"
          ],
          [".", "Errors", ".", "."]
        ],
        "stat": "Sum",
        "period": 300
      }
    },
    {
      "height": 6,
      "width": 12,
      "y": 27,
      "x": 12,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "Lambda Duration (ms)",
        "metrics": [
          ["AWS/Lambda", "Duration", "FunctionName", "resume-visitor-counter"]
        ],
        "stat": "Average",
        "period": 300,
        "annotations": {
          "horizontal": [
            {
              "label": "Warning > 1000ms",
              "value": 1000,
              "fill": "below"
            }
          ]
        }
      }
    },
    {
      "height": 6,
      "width": 12,
      "y": 33,
      "x": 0,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "Lambda Throttles",
        "metrics": [
          ["AWS/Lambda", "Throttles", "FunctionName", "resume-visitor-counter"]
        ],
        "stat": "Sum",
        "period": 300
      }
    },
    {
      "height": 6,
      "width": 6,
      "y": 19,
      "x": 0,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "metrics": [
          [
            "AWS/DynamoDB",
            "ConsumedWriteCapacityUnits",
            "TableName",
            "visitor-counter-prod"
          ]
        ],
        "region": "us-east-1",
        "title": "Write Capacity   "
      }
    },
    {
      "height": 6,
      "width": 6,
      "y": 19,
      "x": 6,
      "type": "metric",
      "properties": {
        "metrics": [
          [
            "AWS/DynamoDB",
            "ConsumedWriteCapacityUnits",
            "TableName",
            "visitor-counter-prod",
            { "region": "us-east-1", "visible": false }
          ],
          [".", "ConsumedReadCapacityUnits", ".", "."]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "Read Capacity   ",
        "period": 300,
        "stat": "Average"
      }
    },
    {
      "height": 6,
      "width": 6,
      "y": 19,
      "x": 18,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "metrics": [["AWS/DynamoDB", "UserErrors"]],
        "region": "us-east-1",
        "title": "DynamoDB User Errors"
      }
    },
    {
      "height": 6,
      "width": 6,
      "y": 19,
      "x": 12,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "metrics": [
          [
            "AWS/DynamoDB",
            "SuccessfulRequestLatency",
            "TableName",
            "visitor-counter-prod",
            "Operation",
            "GetItem"
          ],
          ["...", "PutItem"],
          ["...", "UpdateItem"]
        ],
        "region": "us-east-1",
        "title": "DynamoDB Latency"
      }
    },
    {
      "height": 2,
      "width": 24,
      "y": 9,
      "x": 0,
      "type": "text",
      "properties": {
        "markdown": "## üì° API Gateway ‚Äì Frontend Traffic Monitoring\n",
        "background": "transparent"
      }
    },
    {
      "height": 2,
      "width": 24,
      "y": 17,
      "x": 0,
      "type": "text",
      "properties": {
        "markdown": "## üóÉÔ∏è DynamoDB ‚Äì Backend Storage Monitoring\n",
        "background": "transparent"
      }
    },
    {
      "height": 6,
      "width": 12,
      "y": 11,
      "x": 0,
      "type": "metric",
      "properties": {
        "view": "timeSeries",
        "stacked": false,
        "metrics": [
          [
            "AWS/ApiGateway",
            "Count",
            "ApiName",
            "resume-visitor-api-prod",
            "Resource",
            "/counter",
            "Stage",
            "prod",
            "Method",
            "GET",
            { "region": "us-east-1" }
          ],
          [
            ".",
            "Latency",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            { "region": "us-east-1" }
          ],
          [".", "IntegrationLatency", ".", "."]
        ],
        "region": "us-east-1",
        "title": "API Count & Latency",
        "period": 300
      }
    },
    {
      "height": 6,
      "width": 12,
      "y": 11,
      "x": 12,
      "type": "metric",
      "properties": {
        "metrics": [
          [
            "AWS/ApiGateway",
            "4XXError",
            "ApiName",
            "resume-visitor-api-prod",
            "Resource",
            "/counter",
            "Stage",
            "prod",
            "Method",
            "GET",
            { "region": "us-east-1" }
          ],
          [
            ".",
            "5XXError",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            { "region": "us-east-1" }
          ],
          [
            ".",
            "Count",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
            { "region": "us-east-1" }
          ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "us-east-1",
        "title": "API Errors (4XX, 5XX) + Request Count",
        "period": 300,
        "stat": "Sum",
        "annotations": {
          "horizontal": [
            {
              "label": "Error Spike",
              "value": 1,
              "fill": "below"
            },
            {
              "label": "Warning Level",
              "value": 0.5,
              "fill": "below"
            }
          ]
        }
      }
    },
    {
      "height": 2,
      "width": 24,
      "y": 0,
      "x": 0,
      "type": "text",
      "properties": {
        "markdown": "## üìà Business Intelligence ‚Äì Visitor Analytics\nReal-time insights derived from application logs\n",
        "background": "transparent"
      }
    },
    {
      "height": 7,
      "width": 12,
      "y": 2,
      "x": 0,
      "type": "log",
      "properties": {
        "query": "SOURCE '/aws/lambda/resume-visitor-counter' | fields @timestamp\n| filter @message like /visitor_counter_success/ or @message like /Successfully incremented counter/\n| stats count() as requests by bin(1h)\n| sort @timestamp desc\n| limit 168\n",
        "queryLanguage": "CWLI",
        "region": "us-east-1",
        "stacked": false,
        "view": "bar",
        "title": "Hourly Visitor Activity (7 Days)"
      }
    },
    {
      "height": 7,
      "width": 12,
      "y": 2,
      "x": 12,
      "type": "log",
      "properties": {
        "title": "Daily Visitor Growth Trend (30 Days)",
        "query": "SOURCE '/aws/lambda/resume-visitor-counter'\n| filter @message like /visitor_counter_success/ or @message like /Successfully incremented counter/\n| parse @message /counter to (?<visitor_count>\\d+)/ \n| stats max(visitor_count) as daily_total by bin(1d)\n| sort @timestamp desc\n| limit 30",
        "queryLanguage": "CWLI",
        "region": "us-east-1",
        "view": "timeSeries",
        "stacked": false
      }
    }
  ]
}
